---
description: 
globs: 
alwaysApply: true
---
# Business Logic Memory Bank

## Data Model
- **Todo**: `{id, text, completed, timestamp, order, description?, category, dueDate?, blockedBy?}`
- **Categories**: `'today' | 'backlog' | 'postponed'`
- **User Data**: Firebase path `users/${uid}/todos/`
- **Due Date**: ISO date string (YYYY-MM-DD), optional field
- **Blocked By**: Task ID that this task is blocked by, creates hierarchical nesting

## Security
- **Authentication**: Required for all database operations (`auth != null`)
- **User Isolation**: Users can only access their own data (`$uid === auth.uid`)

## Core Rules
- New todos → auto-categorized by due date logic
- Completed todos → keep current category, move to bottom with `order = minCompletedOrder - 1`  
- Uncompleted todos → recategorize by due date logic with `order = minCategoryOrder - 1`
- Sorting: Primary by `order` ASC, secondary by `timestamp` DESC
- **Blocked tasks** → appear nested under their blocking task, not draggable independently

## Task Nesting & Dependencies
- **Blocked By**: Tasks can be blocked by other tasks via dropdown selection in drawer
- **Hierarchical Display**: Blocked tasks appear indented under their blocking task with visual connectors
- **Category Inheritance**: Blocked tasks automatically inherit parent's category when blocking relationship is created
- **Drag Restrictions**: Blocked tasks cannot be dragged (isDraggable=false)
- **Circular Prevention**: Tasks cannot block themselves or create circular dependencies
- **Scope Filters**: Only active (non-completed), non-nested parent tasks can block others
- **Dropdown Grouping**: Blocked By dropdown shows tasks grouped by TODAY & BACKLOG categories with proper ordering

## Due Date Categorization
- **No due date** → backlog category
- **Due today or overdue** → today category
- **Due in future** → postponed category
- **Due date changes** → automatic recategorization + reordering

## State Management
- Firebase Realtime Database for persistence
- React state with real-time sync via `onValue()`
- User authentication via Firebase Auth
- **Auto-Migration**: On data load, postponed tasks due today automatically move to Today category with user notification

## Key Operations
- **Add**: Auto-categorize by due date, `order = minCategoryOrder - 1`
- **Toggle**: Update completed status + reorder + category logic + **blocked children handling**
- **Drag**: Update category + calculate new order based on position (blocked tasks exempt)
- **Edit**: Update text/description/dueDate/blockedBy + auto-recategorize on due date change
- **Delete**: Remove from Firebase + close any open drawers + clear any blockedBy references

## Blocked Task Completion Flow
- **Parent Completion**: When task with blocked children is completed → all children move to backlog
- **Animation**: 1-second visual transition with scale, shadow, and color changes
- **Relationship Cleanup**: Clear `blockedBy` references when moving children to backlog
- **Notification**: Show user feedback about moved tasks with parent task name

## UI Layout Structure
- **Card 1**: Today + Backlog sections (main active tasks, primary focus) with nested blocked tasks
- **Card 2**: Postponed tasks (separate card, collapsible by date groups)
- **Completed tasks**: No card wrapper, reduced visibility with opacity 0.7 (hover to full opacity)

## UI Flow
- Today section → active tasks for current day + overdue tasks + their blocked subtasks
- Postponed section → tasks with future due dates, grouped by date (collapsible, hidden by default)
- Backlog section → tasks without due dates + their blocked subtasks
- Completed section → finished tasks (collapsed)
- Drawer → detailed view/edit for selected todo + blockedBy dropdown

## Task Hierarchy Display
- **Parent Tasks**: Display normally with full drag functionality
- **Blocked Tasks**: Indented 3 units (ml: 3) under parent with visual connectors
- **Visual Connectors**: Vertical line (left border) + horizontal lines connecting to parent
- **Blocked Task Indicators**: Cannot be dragged, managed only via blockedBy field

## Postponed Tasks Grouping
- **Date Grouping**: Group postponed tasks by due date, nearest dates first
- **Group Sorting**: Today → Tomorrow → Future dates (chronological) → No Date (last)
- **Date Labels**: "Today", "Tomorrow", or "Day, Mon DD" format
- **Task Count**: Show count per date group in parentheses
- **Visual Hierarchy**: Subtitle1 typography for group headers, proper spacing between groups

## UI Design Pattern
- **Card Layout**: Enhanced shadows for better contrast (multi-layer shadows + subtle border)
- **Section Grouping**: Related sections (Today+Backlog) grouped in single cards
- **Visibility Hierarchy**: Completed tasks less prominent with reduced opacity
- **Compact Layout**: Reduced spacing, small components (py: 0.5, mb: 1-2)
- **Todo Items**: Bordered boxes with due date chips and "Drag to reorder" text
- **Due Date Display**: Color-coded chips (error=overdue, warning=today, info=soon)
- **Typography**: body2 for items, small icons, reduced font sizes
- **Flexbox Positioning**: Use justify-content/align-items instead of absolute positioning

## Mobile UI Pattern
- **Add Task Form**: Hidden on mobile (`isMobile` breakpoint detection)
- **Floating Action Button (FAB)**: Fixed position top-right corner, only visible on mobile
- **Bottom Drawer**: SwipeableDrawer from bottom when FAB clicked, contains AddTodoForm
- **Auto-Close**: Drawer closes automatically after task creation
- **Responsive Breakpoint**: `theme.breakpoints.down('sm')` for mobile detection
